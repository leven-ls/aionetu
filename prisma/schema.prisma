// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model UserApiLimit {
  id        String      @id @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSubscription {
  id        String      @id @default(cuid())
  userId    String   @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model HuanLeDou {
  userId    String   @id
  count     Int      @default(0)
}

model HuanLeDouUse {
  id        String      @id @default(cuid())
  userId    String
  count     Int      @default(0)
  createdAt DateTime @default(now())
  @@index([createdAt(sort: Desc), userId])
}

model PromtTask {
  id        String      @id
  userId    String
  createdAt DateTime @default(now())
  finishedAt DateTime?
  takeTime Int?
  output    String
  input     String
  workflow  String
  prompt     Json
  status   String? @default("pending")
  queuePosition Int? @default(0)

  @@index([createdAt(sort: Desc), userId])
}

model PromtTaskOld {
  id        String      @id
  userId    String
  createdAt DateTime @default(now())
  finishedAt DateTime?
  takeTime Int?
  output    String?
  input     String?
  workflow  String
  prompt     Json
  status   String? @default("pending")

  @@index([createdAt(sort: Desc), userId])
}
